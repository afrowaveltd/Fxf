@inherits LayoutComponentBase
@inject IStringLocalizer<MainLayout> localizer
@inject IHttpContextAccessor httpContextAccessor
@inject IThemeService theme
@inject ISelectOptionsService selectOptions

<div class="page">
	<div class="sidebar">
		<NavMenu />
	</div>
	<main>
		@if(languages == null)
		{
			<p>@localizer["Loading..."]</p>
		}
		else
		{
			<div class="top-row px-4">
				<div>
					<select id="language-selector"
							style="margin-right: 10px; padding-top:2px; padding-bottom: 2px; padding-left: 5px;"
							onchange="changeLanguage(this.value)"
							class="nav-item nav-link form form-control-sm">
						@foreach(var lang in languages)
						{
							if(lang.Selected)
							{
								<option value="@lang.Value" selected>@lang.Text</option>
							}
							else
							{
								<option value="@lang.Value">@lang.Text</option>
							}
						}
					</select>
				</div>
				<div>
					<select id="theme_selector" class="nav-item nav-link form form-control-sm"
							style="margin-right: 10px; padding-top:2px;  padding-bottom: 2px; padding-left: 5px;"
							onchange="setTheme(this.value)" asp-items="@themes">

						@foreach(var them in themes)
						{
							if(them.Selected)
							{
								<option value="@them.Value" selected>@them.Text</option>
							}
							else
							{
								<option value="@them.Value">@them.Text</option>
							}
						}

					</select>
				</div>

				<div id="topbar_user" style="margin-left: 1.3rem"></div>
				<div id="user_counts" style="margin-left: 0.5rem"></div>
			</div>

		}
		<article class="content px-4" onchange="reloadStatus">
			@Body
		</article>
	</main>
</div>

@code {
	private List<SelectOption> themes = [];
	private List<SelectOption> languages = [];
	private string currentLanguage = "en";

	protected override async Task OnInitializedAsync()
	{
		themes = selectOptions.GetThemes(theme.CurrentTheme);

		var context = httpContextAccessor?.HttpContext;
		if(context != null && context.Request.Cookies.ContainsKey("BlazorCulture"))
		{
			var cookieValue = context.Request.Cookies["BlazorCulture"];
			if(!string.IsNullOrWhiteSpace(cookieValue))
			{
				// Cookie format: c=cs|uic=cs
				var match = System.Text.RegularExpressions.Regex.Match(cookieValue, "([a-zA-Z-]+)");
				if(match.Success && match.Groups.Count > 1)
				{
					currentLanguage = match.Groups[1].Value.Split('-')[0];
				}
			}
		}

		languages = await selectOptions.GetLanguagesAsync(currentLanguage);
	}
}