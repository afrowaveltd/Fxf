@page "/realtime"
@rendermode InteractiveServer

@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<Realtime> _t
@inject NavigationManager Navigation
<h3>@_t["Realtime"]</h3>
<div>@_t["_test"]</div>

@code {
	private HubConnection? hubConnection;

	protected override async Task OnInitializedAsync()
	{
		hubConnection = new HubConnectionBuilder()
			.WithUrl(Navigation.ToAbsoluteUri("localization_hub"))
			.WithAutomaticReconnect()
			.Build();

		hubConnection.On<string>("ReceiveMessage", (message) =>
		{
			Console.WriteLine($"Received message: {message}");
			StateHasChanged();
		});

		hubConnection.Closed += async (error) =>
		{
			await DisposeAsync();
		};

		await hubConnection.StartAsync();
		Console.WriteLine($"Connected: {hubConnection.ConnectionId}");

		await base.OnInitializedAsync();

	}

	public async ValueTask DisposeAsync()
	{
		try { if (hubConnection != null) await hubConnection.DisposeAsync(); }
		catch { /* ignore */ }
	}
}